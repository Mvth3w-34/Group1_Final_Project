--Written by Mathew Chebet
DROP TABLE OPERATOR_TIMESTAMP IF EXISTS;
DROP TABLE MAINTENANCE_REQUEST IF EXISTS;
DROP TABLE VEHICLE_COMPONENT IF EXISTS;
DROP TABLE COMPONENT IF EXISTS;
DROP TABLE FUEL_CONSUMPTION_ALERTS IF EXISTS;
DROP TABLE OPERATOR_BUS_STOP IF EXISTS;

--Written by Mathew Chebet
CREATE TABLE COMPONENT (
    COMPONENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    COMPONENT_NAME VARCHAR(25) NOT NULL 
);

--Written by Mathew Chebet
CREATE TABLE FUEL_CONSUMPTION_ALERTS (
    ALERT_ID INT PRIMARY KEY AUTO_INCREMENT,
    DATE_OCCURED DATE NOT NULL,

);

--Written by Mathew Chebet
CREATE TABLE OPERATOR_TIMESTAMP (
    TIMESTAMP_ID INT PRIMARY KEY AUTO_INCREMENT,
    PUNCH_TIME_START TIMESTAMP NOT NULL,
    PUNCH_TIME_STOP TIMESTAMP NOT NULL,
    PUNCH_TYPE VARCHAR(25) NOT NULL,
    OPERATOR_ID INT NULL,
    FOREIGN KEY(OPERATOR_ID) REFERENCES OPERATOR(OPERATOR_ID)   
);

--Written by Mathew Chebet
CREATE TABLE MAINTENANCE_REQUEST (
    REQUEST_ID INT PRIMARY KEY AUTO_INCREMENT,
    REQUEST_DATE DATE NOT NULL,
    QUOTED_COST DECIMAL(4,2) NOT NULL,
    OPERATOR_ID INT,
    VEHICLE_COMPONENT_ID INT,
    SERVICE_DESCRIPTION VARCHAR(50) NOT NULL,
    IS_COMPLETED VARCHAR(3) NOT NULL,
    FOREIGN KEY(OPERATOR_ID) REFERENCES OPERATOR(OPERATOR_ID),
    FOREIGN KEY(VEHICLE_COMPONENT_ID) REFERENCES VEHICLE_COMPONENT(VEHICLE_COMPONENT_ID)
);

--Written by Mathew Chebet
CREATE TABLE VEHICLE_COMPONENT (
    VEHICLE_COMPONENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    HOURS_USED INT DEFAULT 0,
    VEHICLE_ID INT, 
    COMPONENT_ID INT,
    FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID),
    FOREIGN KEY (VEHICLE_COMPONENT_ID) REFERENCES VEHICLE_COMPONENT(VEHICLE_COMPONENT_ID),
);

--Written by Mathew Chebet
CREATE TABLE OPERATOR_BUS_STOP (
    OPERATOR_BUS_STOP INT PRIMARY KEY AUTO_INCREMENT,
    ARRIVAL_TIME TIMESTAMP NOT NULL,
    EXPECTED ARRIVAL_TIME TIMESTAMP NOT NULL,
    OPERATOR_ID INT,
    VEHICLE_ID INT,
    LOCATION_ID INT,
    FOREIGN KEY(OPERATOR_ID) REFERENCES OPERATOR(OPERATOR_ID),
    FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(VEHICLE_ID),
    FOREIGN KEY(LOCATION_ID) REFERENCES "LOCATION"(LOCATION_ID)
);

--Written by Mathew Chebet
--Component Table data

INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('REAR BRAKES');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('FRONT BRAKES');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('LEFT REAR TIRE');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('LEFT FRONT TIRE');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('RIGHT FRONT TIRE');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('RIGHT REAR TIRE');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('REAR AXLE BEARINGS');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('FRONT AXLE BEARINGS');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('CATERNARY');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('CIRCUIT BREAKER');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('PANTOGRAPH');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('DIESEL ENGINE');
INSERT INTO COMPONENT(COMPONENT_NAME) VALUES ('ELECTRIC ENGINE');




--Written by Mathew Chebet
--Vehicle Component Table Data

INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (600, 1, 1);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (600, 1, 2);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (2000, 1, 3);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (2000, 1, 4);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (2000, 1, 5);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (2000, 1, 6);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (300, 1, 7);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (300, 1, 8);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (250, 1, 11);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (700, 2, 1);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (700, 2, 2);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (250, 2, 9);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (300, 2, 10);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (250, 2, 11);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (500, 2, 13);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (700, 3, 1);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (700, 3, 2);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (250, 3, 9);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (300, 3, 10);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (250, 3, 11);
INSERT INTO VEHICLE_COMPONENT(HOURS_USED, VEHICLE_ID, COMPONENT_ID) VALUES (500, 3, 12);

--Written by Mathew Chebet
--Maintenance Request Table Data
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2025-12-03', 300.50, OPERATOR_ID, 1, 'BRAKE REPLACEMENT', 'NO');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2025-12-05', 300.50, OPERATOR_ID, 2, 'BRAKE REPLACEMENT', 'NO');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2023-10-03', 600, OPERATOR_ID, 13, 'CIRCUIT BREAKER REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2022-12-03', 300.50, OPERATOR_ID, 10, 'BRAKE REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2022-12-04', 300.50, OPERATOR_ID, 11, 'BRAKE REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2022-09-03', 1500.50, OPERATOR_ID, 21, 'ENGINE REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2022-07-03', 300.50, OPERATOR_ID, 7, 'AXLE BEARING REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2021-12-05', 300.50, OPERATOR_ID, 8, 'AXLE BEARING REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2021-11-06', 105.50, OPERATOR_ID, 3, 'TIRE REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2021-10-15', 105.50, OPERATOR_ID, 4, 'TIRE REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2021-12-30', 300.50, OPERATOR_ID, 11, 'BRAKE REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2021-03-03', 2000.20, OPERATOR_ID, 15, 'ENGINE REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2020-01-15', 700.50, OPERATOR_ID, 12, 'CATERNARY REPLACEMENT', 'YES');
INSERT INTO MAINTENANCE_REQUEST (REQUEST_DATE, QUOTED_COST, OPERATOR_ID, VEHICLE_COMPONENT_ID, SERVICE_DESCRIPTION, IS_COMPLETED) VALUES ('2020-12-16', 500.20, OPERATOR_ID, 14, 'PANTOGRAPH REPLACEMENT', 'YES');

--Written by Mathew Chebet
--Fuel Consumption Alert Table Data
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2025-12-03', 1);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2015-05-03', 2);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2025-06-23', 3);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2024-07-03', 3);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2023-01-13', 1);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2020-02-03', 1);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2022-05-04', 2);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2019-06-13', 1);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2018-02-03', 2);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2017-01-15', 1);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2016-08-20', 2);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2014-09-12', 1);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2012-10-13', 3);
INSERT INTO FUEL_CONSUMPTION_ALERT (DATE_OCCURED, VEHICLE_ID) VALUES ('2012-05-01', 1);

--Written by Mathew Chebet
--Operator Timestamp Table Data
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'BREAK', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'BREAK', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'bREAK', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'BREAK', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'BREAK', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
INSERT INTO OPERATOR_TIMESTAMP (PUNCH_TIME_START, PUNCH_TIME_STOP, PUNCH_TYPE, OPERATOR_ID) VALUES (PUNCH_TIME_START, PUNCH_TIME_STOP, 'START', OPERATOR_ID);
